name: tests

on:
  # Run this workflow every time a new commit or pull request is pushed to repo
  push:
  pull_request:
  # Allow workflow to be manually triggered
  workflow_dispatch:
  # Also run it once weekly to check for impact due to changes in the OS,
  # python, postgres, or any external packages/dependencies
  schedule:
  - cron: '7 14 * * fri'

jobs:
  # We check which files have changed and then run only the required tests
  change-detection:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'rankings/**'
          frontend:
            - 'svelte-ui/**'
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}

  test-backend:
    needs: change-detection
    # Trigger if content changed or workflow was triggered manually
    # See: https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
    if: ${{ needs.change-detection.outputs.backend == 'true' || github.event_name == 'workflow_dispatch' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Test with specific supported versions
          - name: supported
            os: ubuntu-20.04
            python: 3.8
            postgres: 10
          # Test everything with latest versions
          - name: latest
            os: ubuntu-latest
            python: 3.x
            postgres: latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install poetry
        shell: bash
        run: curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.4.2 python -
      - name: Install dependencies
        run: poetry install
        working-directory: rankings
      - name: Check for linting issues
        run: ./run.sh lint
      - name: Test database creation, migrations & data import
        run: |
          poetry run ./manage.py migrate \
            && poetry run ./manage.py loaddata game.json \
            && poetry run ./manage.py loaddata players.json
        working-directory: rankings
      - name: Run tests
        run: ./run.sh test
      - name: Print out all outdated packages
        run: poetry show --outdated
        working-directory: rankings
        continue-on-error: true

  test-ui:
    needs: change-detection
    # Trigger if content changed or workflow was triggered manually
    if: ${{ needs.change-detection.outputs.frontend == 'true' || github.event_name == 'workflow_dispatch' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Test with specific supported versions
          - name: supported
            os: ubuntu-22.04
            node: 20

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install Node v${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm ci
        working-directory: svelte-ui
      - name: Build static site
        run: npm run build
        working-directory: svelte-ui
      - name: Show built files & size
        run: du -sh build/ && du -bah build/
        working-directory: svelte-ui
      - name: Print out all outdated packages
        run: npm outdated
        working-directory: svelte-ui
        continue-on-error: true
